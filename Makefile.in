.POSIX:
.SUFFIXES:
.SUFFIXES: .c .o .uto

VERSION    = 1.0.0

CC         = @CC@
CCOV       = gcov
CFLAGS     = @CFLAGS@
CFLAGS_COV = @CFLAGS_COV@
CFLAGS_SAN = @CFLAGS_SAN@
INCLUDEDIR = @PREFIX@/include
LD         = @LD@
LIBDIR     = @PREFIX@/lib
PREFIX     = @PREFIX@

.PHONY: all
all: test_memory test_readme uri.coverage

liburi.a: internal/charset.o internal/percent.o internal/str.o uri.o
	$(LD) -r $^ -o $@

.c.o:
	$(CC) $(CFLAGS) -I. -c $^ -o $@

.c.uto:
	$(CC) $(CFLAGS) $(CFLAGS_COV) $(CFLAGS_SAN) -I. -c $^ -o $@

test_memory: tests/test_memory.o tests/memory_shim.o liburi.a
	$(CC) $(CFLAGS) $(CFLAGS_SAN) -I. $^ -o $@
	./tests/test_memory_runner

test_readme: README.md liburi.a
	awk '/```c/{ C=1; next } /```/{ C=0 } C' README.md | sed -e 's#liburi/##' > test_readme.c
	$(CC) $(CFLAGS) $(CFLAGS_SAN) -I. test_readme.c liburi.a -o $@
	./$@

uri.coverage: internal/charset.uto internal/percent.uto internal/str.uto uri.uto tests/test_uri.uto
	$(CC) $(CFLAGS) $(CFLAGS_COV) $(CFLAGS_SAN) $^ -o $@
	./$@
	$(CCOV) uri.c
	! grep "#####" uri.c.gcov |grep -ve "// UNREACHABLE$$"

liburi.pc:
	( echo 'Name: liburi' ;\
	echo 'Version: $(VERSION)' ;\
	echo 'Description: URI normalizer library' ;\
	echo 'prefix=$(PREFIX)' ;\
	echo 'exec_prefix=$${prefix}' ;\
	echo 'includedir=$${prefix}/include' ;\
	echo 'libdir=$${prefix}/lib' ;\
	echo 'Cflags: -I$${includedir}' ;\
	echo 'Libs: -L$${libdir} -luri' ) > $@

.PHONY: install
install: uri.h liburi.a liburi.pc
	mkdir -p $(INCLUDEDIR)/liburi
	mkdir -p $(LIBDIR)/pkgconfig
	install -m644 uri.h $(INCLUDEDIR)/liburi/uri.h
	install -m644 liburi.a $(LIBDIR)/liburi.a
	install -m644 liburi.pc $(LIBDIR)/pkgconfig/liburi.pc

.PHONY: uninstall
uninstall:
	rm -f $(INCLUDEDIR)/liburi/uri.h
	rm -f $(LIBDIR)/liburi.a
	rm -f $(LIBDIR)/pkgconfig/liburi.pc

.PHONY: clean
clean:
	rm -rf liburi.a liburi.pc *.o *.uto **/*.o **/*.uto *.gc?? **/*.gc?? test_memory test_readme* test_uri *.coverage

.PHONY: distclean
distclean: clean
	rm -f Makefile config.status
